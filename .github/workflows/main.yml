# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# From structlog's action
env:
  FORCE_COLOR: "1"  # Make tools pretty.
  TOX_TESTENV_PASSENV: FORCE_COLOR
  PYTHON_LATEST: "3.10"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    name: "Python 3.10"
    runs-on: "ubuntu-latest"
    env:
      USING_COVERAGE: '3.10'

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"
      - name: "Install dependencies"
        run: |
          python3 -VV
          python3 -m site
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install --upgrade coverage[toml] virtualenv tox tox-gh-actions

      - name: "Run tox targets for 3.10"
        run: "python3 -m tox"

      - name: Upload coverage data
        uses: actions/upload-artifact@v2
        with:
          name: coverage-data
          path: .coverage.*
          if-no-files-found: ignore

  # This is from https://hynek.me/articles/ditch-codecov-python/
  # and https://github.com/hynek/structlog/blob/main/.github/workflows/main.yml
  # Hynek is always right
  coverage:
    name: Combine & check coverage.
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          # Use latest Python, so it understands all syntax.
          python-version: ${{env.PYTHON_LATEST}}

      - run: python3 -m pip install --upgrade coverage[toml]

      - uses: actions/download-artifact@v2
        with:
          name: coverage-data

      - name: Combine coverage & fail if it's <100%.
        run: |
          python3 -m coverage combine
          python3 -m coverage html --skip-covered --skip-empty
          python3 -m coverage report --fail-under=100
      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v2
        with:
          name: html-report
          path: htmlcov
        if: ${{ failure() }}
